 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [FC120000]                |         dd      ISR_Reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [1D130000]                |         dd      ISR_Tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [41130000]                |         dd      ISR_Keyboard ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | 00000000                  |         dd      0 ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | 00000000                  |         dd      0 ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | 00000000                  |         dd      0 ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | 00000000                  |         dd      0 ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | 00000000                  |         dd      0 ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9AB07                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9E704                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab4b_app.i
  1113 |          |                           | 	CPU	8086
  1114 |          |                           | 	ALIGN	2
  1115 | 00000886 | EB26                      | 	jmp	main	; Jump to program start
  1116 |          |                           | L_lab4b_app_2:
  1117 | 00000888 | 5374617274696E6720-       | 	DB	"Starting kernel...",0xA,0
  1118 | 00000891 | 6B65726E656C2E2E2E-       | ...
  1119 | 0000089A | 0A00                      | ...
  1120 |          |                           | L_lab4b_app_1:
  1121 | 0000089C | 4372656174696E6720-       | 	DB	"Creating task...",0xA,0
  1122 | 000008A5 | 7461736B2E2E2E0A00        | ...
  1123 |          |                           | 	ALIGN	2
  1124 |          |                           | main:
  1125 |          |                           | 	; >>>>> Line:	17
  1126 |          |                           | 	; >>>>> { 
  1127 | 000008AE | EB2F                      | 	jmp	L_lab4b_app_3
  1128 |          |                           | L_lab4b_app_4:
  1129 |          |                           | 	; >>>>> Line:	18
  1130 |          |                           | 	; >>>>> YKInitialize(); 
  1131 | 000008B0 | E88903                    | 	call	YKInitialize
  1132 |          |                           | 	; >>>>> Line:	20
  1133 |          |                           | 	; >>>>> printString("Creating task...\n"); 
  1134 | 000008B3 | B8[9C08]                  | 	mov	ax, L_lab4b_app_1
  1135 | 000008B6 | 50                        | 	push	ax
  1136 | 000008B7 | E86EFB                    | 	call	printString
  1137 | 000008BA | 83C402                    | 	add	sp, 2
  1138 |          |                           | 	; >>>>> Line:	21
  1139 |          |                           | 	; >>>>> YKNewTask(Task, (void *) &TaskStack[256], 0); 
  1140 | 000008BD | 30C0                      | 	xor	al, al
  1141 | 000008BF | 50                        | 	push	ax
  1142 | 000008C0 | B8[B40B]                  | 	mov	ax, (TaskStack+512)
  1143 | 000008C3 | 50                        | 	push	ax
  1144 | 000008C4 | B8[3C09]                  | 	mov	ax, Task
  1145 | 000008C7 | 50                        | 	push	ax
  1146 | 000008C8 | E8E903                    | 	call	YKNewTask
  1147 | 000008CB | 83C406                    | 	add	sp, 6
  1148 |          |                           | 	; >>>>> Line:	23
  1149 |          |                           | 	; >>>>> printString("Starting kernel...\n"); 
  1150 | 000008CE | B8[8808]                  | 	mov	ax, L_lab4b_app_2
  1151 | 000008D1 | 50                        | 	push	ax
  1152 | 000008D2 | E853FB                    | 	call	printString
  1153 | 000008D5 | 83C402                    | 	add	sp, 2
  1154 |          |                           | 	; >>>>> Line:	24
  1155 |          |                           | 	; >>>>> YKRun(); 
  1156 | 000008D8 | E89305                    | 	call	YKRun
  1157 | 000008DB | 89EC                      | 	mov	sp, bp
  1158 | 000008DD | 5D                        | 	pop	bp
  1159 | 000008DE | C3                        | 	ret
  1160 |          |                           | L_lab4b_app_3:
  1161 | 000008DF | 55                        | 	push	bp
  1162 | 000008E0 | 89E5                      | 	mov	bp, sp
  1163 | 000008E2 | EBCC                      | 	jmp	L_lab4b_app_4
  1164 |          |                           | L_lab4b_app_9:
  1165 | 000008E4 | 20636F6E7465787420-       | 	DB	" context switches! YKIdleCount is ",0
  1166 | 000008ED | 737769746368657321-       | ...
  1167 | 000008F6 | 20594B49646C65436F-       | ...
  1168 | 000008FF | 756E742069732000          | ...
  1169 |          |                           | L_lab4b_app_8:
  1170 | 00000907 | 5461736B2072756E6E-       | 	DB	"Task running after ",0
  1171 | 00000910 | 696E67206166746572-       | ...
  1172 | 00000919 | 2000                      | ...
  1173 |          |                           | L_lab4b_app_7:
  1174 | 0000091B | 44656C6179696E6720-       | 	DB	"Delaying task...",0xA,0
  1175 | 00000924 | 7461736B2E2E2E0A00        | ...
  1176 |          |                           | L_lab4b_app_6:
  1177 | 0000092D | 5461736B2073746172-       | 	DB	"Task started.",0xA,0
  1178 | 00000936 | 7465642E0A00              | ...
  1179 |          |                           | 	ALIGN	2
  1180 |          |                           | Task:
  1181 |          |                           | 	; >>>>> Line:	28
  1182 |          |                           | 	; >>>>> { 
  1183 | 0000093C | EB6E                      | 	jmp	L_lab4b_app_10
  1184 |          |                           | L_lab4b_app_11:
  1185 |          |                           | 	; >>>>> Line:	32
  1186 |          |                           | 	; >>>>> printString("Task started.\n"); 
  1187 | 0000093E | B8[2D09]                  | 	mov	ax, L_lab4b_app_6
  1188 | 00000941 | 50                        | 	push	ax
  1189 | 00000942 | E8E3FA                    | 	call	printString
  1190 | 00000945 | 83C402                    | 	add	sp, 2
  1191 |          |                           | 	; >>>>> Line:	33
  1192 |          |                           | 	; >>>>> while (1) 
  1193 | 00000948 | EB5C                      | 	jmp	L_lab4b_app_13
  1194 |          |                           | L_lab4b_app_12:
  1195 |          |                           | 	; >>>>> Line:	35
  1196 |          |                           | 	; >>>>> printString("Delaying task...\n"); 
  1197 | 0000094A | B8[1B09]                  | 	mov	ax, L_lab4b_app_7
  1198 | 0000094D | 50                        | 	push	ax
  1199 | 0000094E | E8D7FA                    | 	call	printString
  1200 | 00000951 | 83C402                    | 	add	sp, 2
  1201 |          |                           | 	; >>>>> Line:	37
  1202 |          |                           | 	; >>>>> YKDelayTask(2); 
  1203 | 00000954 | B80200                    | 	mov	ax, 2
  1204 | 00000957 | 50                        | 	push	ax
  1205 | 00000958 | E87B06                    | 	call	YKDelayTask
  1206 | 0000095B | 83C402                    | 	add	sp, 2
  1207 |          |                           | 	; >>>>> Line:	39
  1208 |          |                           | 	; >>>>> YKEnterMutex(); 
  1209 | 0000095E | E81B03                    | 	call	YKEnterMutex
  1210 |          |                           | 	; >>>>> Line:	40
  1211 |          |                           | 	; >>>>> numCtxSwitches = YKCtxSwCount; 
  1212 | 00000961 | A1[BE10]                  | 	mov	ax, word [YKCtxSwCount]
  1213 | 00000964 | 8946FC                    | 	mov	word [bp-4], ax
  1214 |          |                           | 	; >>>>> Line:	41
  1215 |          |                           | 	; >>>>> idleCount = YKIdleCount; 
  1216 | 00000967 | A1[C010]                  | 	mov	ax, word [YKIdleCount]
  1217 | 0000096A | 8946FE                    | 	mov	word [bp-2], ax
  1218 |          |                           | 	; >>>>> Line:	42
  1219 |          |                           | 	; >>>>> YKIdleCount = 0; 
  1220 | 0000096D | C706[C010]0000            | 	mov	word [YKIdleCount], 0
  1221 |          |                           | 	; >>>>> Line:	43
  1222 |          |                           | 	; >>>>> YKExitMutex(); 
  1223 | 00000973 | E81403                    | 	call	YKExitMutex
  1224 |          |                           | 	; >>>>> Line:	45
  1225 |          |                           | 	; >>>>> printString("Task running after "); 
  1226 | 00000976 | B8[0709]                  | 	mov	ax, L_lab4b_app_8
  1227 | 00000979 | 50                        | 	push	ax
  1228 | 0000097A | E8ABFA                    | 	call	printString
  1229 | 0000097D | 83C402                    | 	add	sp, 2
  1230 |          |                           | 	; >>>>> Line:	46
  1231 |          |                           | 	; >>>>> printUInt(numCtxSwitches); 
  1232 | 00000980 | FF76FC                    | 	push	word [bp-4]
  1233 | 00000983 | E846FC                    | 	call	printUInt
  1234 | 00000986 | 83C402                    | 	add	sp, 2
  1235 |          |                           | 	; >>>>> Line:	47
  1236 |          |                           | 	; >>>>> printString(" context switches! YKIdleCount is "); 
  1237 | 00000989 | B8[E408]                  | 	mov	ax, L_lab4b_app_9
  1238 | 0000098C | 50                        | 	push	ax
  1239 | 0000098D | E898FA                    | 	call	printString
  1240 | 00000990 | 83C402                    | 	add	sp, 2
  1241 |          |                           | 	; >>>>> Line:	48
  1242 |          |                           | 	; >>>>> printUInt(idleCount); 
  1243 | 00000993 | FF76FE                    | 	push	word [bp-2]
  1244 | 00000996 | E833FC                    | 	call	printUInt
  1245 | 00000999 | 83C402                    | 	add	sp, 2
  1246 |          |                           | 	; >>>>> Line:	49
  1247 |          |                           | 	; >>>>> printString(".\n"); 
  1248 | 0000099C | B8[AB08]                  | 	mov	ax, (L_lab4b_app_1+15)
  1249 | 0000099F | 50                        | 	push	ax
  1250 | 000009A0 | E885FA                    | 	call	printString
  1251 | 000009A3 | 83C402                    | 	add	sp, 2
  1252 |          |                           | L_lab4b_app_13:
  1253 | 000009A6 | EBA2                      | 	jmp	L_lab4b_app_12
  1254 |          |                           | L_lab4b_app_14:
  1255 | 000009A8 | 89EC                      | 	mov	sp, bp
  1256 | 000009AA | 5D                        | 	pop	bp
  1257 | 000009AB | C3                        | 	ret
  1258 |          |                           | L_lab4b_app_10:
  1259 | 000009AC | 55                        | 	push	bp
  1260 | 000009AD | 89E5                      | 	mov	bp, sp
  1261 | 000009AF | 83EC04                    | 	sub	sp, 4
  1262 | 000009B2 | EB8A                      | 	jmp	L_lab4b_app_11
  1263 |          |                           | 	ALIGN	2
  1264 |          |                           | TaskStack:
  1265 | 000009B4 | 00<rept>                  | 	TIMES	512 db 0
  1266 |          |                           | 
  1267 |          |                           | enable_interrupts:
  1268 | 00000BB4 | FB                        | 	sti	
  1269 | 00000BB5 | C3                        | 	ret
  1270 |          |                           | 
  1271 |          |                           | disable_interrupts:
  1272 | 00000BB6 | FA                        | 	cli
  1273 | 00000BB7 | C3                        | 	ret
  1274 |          |                           | 
  1275 |          |                           | YKSecond:
  1276 | 00000BB8 | 55                        | 	push bp
  1277 | 00000BB9 | 89E5                      | 	mov bp, sp
  1278 | 00000BBB | 9C                        | 	pushf
  1279 | 00000BBC | 0E                        | 	push cs
  1280 | 00000BBD | FF36[D70B]                | 	push word [ipLabelFirst]
  1281 |          |                           | 
  1282 | 00000BC1 | 50                        | 	push ax
  1283 | 00000BC2 | 53                        | 	push bx
  1284 | 00000BC3 | 51                        | 	push cx
  1285 | 00000BC4 | 52                        | 	push dx
  1286 | 00000BC5 | 56                        | 	push si
  1287 | 00000BC6 | 57                        | 	push di
  1288 | 00000BC7 | 55                        | 	push bp
  1289 | 00000BC8 | 06                        | 	push es
  1290 | 00000BC9 | 1E                        | 	push ds
  1291 |          |                           | 
  1292 | 00000BCA | 8B36[F810]                | 	mov si, word[old_task]
  1293 | 00000BCE | 8924                      | 	mov [si], sp	
  1294 | 00000BD0 | 8B36[F610]                | 	mov si, word[running_task]
  1295 | 00000BD4 | 8B24                      | 	mov sp, [si]
  1296 |          |                           | 		
  1297 | 00000BD6 | CF                        | 	iret
  1298 |          |                           | 
  1299 | 00000BD7 | [D90B]                    | 	ipLabelFirst: DW Label2
  1300 |          |                           | 
  1301 |          |                           | Label2:
  1302 | 00000BD9 | 89EC                      | 	mov sp, bp
  1303 | 00000BDB | 5D                        | 	pop bp
  1304 | 00000BDC | C3                        | 	ret
  1305 |          |                           | 
  1306 |          |                           | YKFirst:
  1307 |          |                           | 	;push bp
  1308 |          |                           | 	;mov bp, sp
  1309 |          |                           | 
  1310 | 00000BDD | 8B36[F610]                | 	mov si, word[running_task]
  1311 | 00000BE1 | 8B24                      | 	mov sp, [si]
  1312 | 00000BE3 | B80002                    | 	mov ax, 0x200
  1313 | 00000BE6 | 83C602                    | 	add si, 2
  1314 | 00000BE9 | 8B34                      | 	mov si, [si]
  1315 |          |                           | 	
  1316 | 00000BEB | 50                        | 	push ax
  1317 | 00000BEC | 0E                        | 	push cs
  1318 | 00000BED | 56                        | 	push si
  1319 | 00000BEE | CF                        | 	iret			
  1320 |          |                           | 
  1321 |          |                           | YKISR:
  1322 | 00000BEF | 8B36[F810]                | 	mov si, word[old_task]
  1323 | 00000BF3 | 8924                      | 	mov [si], sp
  1324 | 00000BF5 | 8B36[F610]                | 	mov si, word[running_task]
  1325 | 00000BF9 | 8B24                      | 	mov sp, [si]	;move the new sp to the sp register			
  1326 | 00000BFB | 1F                        | 	pop ds
  1327 | 00000BFC | 07                        | 	pop es
  1328 | 00000BFD | 5D                        | 	pop bp
  1329 | 00000BFE | 5F                        | 	pop di
  1330 | 00000BFF | 5E                        | 	pop si
  1331 | 00000C00 | 5A                        | 	pop dx
  1332 | 00000C01 | 59                        | 	pop cx
  1333 | 00000C02 | 5B                        | 	pop bx
  1334 | 00000C03 | 58                        | 	pop ax
  1335 | 00000C04 | CF                        | 	iret		; this assumes that the top of the stack is ip, cs, flags. iret atomically pops those three and returns instruction control to the new ip
  1336 |          |                           | 	
  1337 |          |                           | YKDispHandler:
  1338 |          |                           | 	
  1339 | 00000C05 | 55                        | 	push bp
  1340 | 00000C06 | 89E5                      | 	mov bp, sp
  1341 |          |                           | 
  1342 | 00000C08 | 9C                        | 	pushf
  1343 | 00000C09 | 0E                        | 	push cs
  1344 | 00000C0A | FF36[2D0C]                | 	push word [ipLabel]	
  1345 |          |                           | 
  1346 | 00000C0E | 50                        | 	push ax
  1347 | 00000C0F | 53                        | 	push bx
  1348 | 00000C10 | 51                        | 	push cx
  1349 | 00000C11 | 52                        | 	push dx
  1350 | 00000C12 | 56                        | 	push si
  1351 | 00000C13 | 57                        | 	push di
  1352 | 00000C14 | 55                        | 	push bp
  1353 | 00000C15 | 06                        | 	push es
  1354 | 00000C16 | 1E                        | 	push ds
  1355 |          |                           | 		
  1356 |          |                           | ;save old sp and get new sp
  1357 | 00000C17 | 8B36[F810]                | 	mov si, word[old_task]
  1358 | 00000C1B | 8924                      | 	mov [si], sp
  1359 | 00000C1D | 8B36[F610]                | 	mov si, word[running_task]
  1360 | 00000C21 | 8B24                      | 	mov sp, [si]
  1361 |          |                           | 
  1362 | 00000C23 | 1F                        | 	pop ds
  1363 | 00000C24 | 07                        | 	pop es
  1364 | 00000C25 | 5D                        | 	pop bp
  1365 | 00000C26 | 5F                        | 	pop di
  1366 | 00000C27 | 5E                        | 	pop si
  1367 | 00000C28 | 5A                        | 	pop dx
  1368 | 00000C29 | 59                        | 	pop cx
  1369 | 00000C2A | 5B                        | 	pop bx
  1370 | 00000C2B | 58                        | 	pop ax
  1371 | 00000C2C | CF                        | 	iret
  1372 |          |                           | 
  1373 | 00000C2D | [2F0C]                    | 	ipLabel: DW Label1
  1374 |          |                           | 
  1375 |          |                           | Label1:
  1376 | 00000C2F | 89EC                      | 	mov sp, bp
  1377 | 00000C31 | 5D                        | 	pop bp
  1378 | 00000C32 | C3                        | 	ret
  1379 |          |                           | 
  1380 |          |                           | 
  1381 |          |                           | 
  1382 |          |                           | 
  1383 |          |                           | 
  1384 |          |                           | 
  1385 |          |                           | 
  1386 |          |                           | 
  1387 |          |                           | 
  1388 |          |                           | ;GetIP:
  1389 |          |                           | ;	push bp
  1390 |          |                           | ;	mov bp, sp
  1391 |          |                           | 	
  1392 |          |                           | ;	mov ax, word[bp+2]
  1393 |          |                           | 	
  1394 |          |                           | ;	mov sp, bp
  1395 |          |                           | ;	pop bp
  1396 |          |                           | ;	ret
  1397 |          |                           | 
  1398 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1399 |          |                           | 	CPU	8086
  1400 | 00000C33 | 90                        | 	ALIGN	2
  1401 | 00000C34 | E977FC                    | 	jmp	main	; Jump to program start
  1402 | 00000C37 | 90                        | 	ALIGN	2
  1403 |          |                           | next_available_tcb:
  1404 | 00000C38 | 0000                      | 	DW	0
  1405 |          |                           | YK_running:
  1406 | 00000C3A | 0000                      | 	DW	0
  1407 |          |                           | 	ALIGN	2
  1408 |          |                           | YKInitialize:
  1409 |          |                           | 	; >>>>> Line:	33
  1410 |          |                           | 	; >>>>> { 
  1411 | 00000C3C | EB39                      | 	jmp	L_yakc_1
  1412 |          |                           | L_yakc_2:
  1413 |          |                           | 	; >>>>> Line:	35
  1414 |          |                           | 	; >>>>> YKNewTask(YKIdleTask, (void *)&IdleTskStk[256], 100); 
  1415 | 00000C3E | B064                      | 	mov	al, 100
  1416 | 00000C40 | 50                        | 	push	ax
  1417 | 00000C41 | B8[FA12]                  | 	mov	ax, (IdleTskStk+512)
  1418 | 00000C44 | 50                        | 	push	ax
  1419 | 00000C45 | B8[980C]                  | 	mov	ax, YKIdleTask
  1420 | 00000C48 | 50                        | 	push	ax
  1421 | 00000C49 | E86800                    | 	call	YKNewTask
  1422 | 00000C4C | 83C406                    | 	add	sp, 6
  1423 |          |                           | 	; >>>>> Line:	36
  1424 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  1425 | 00000C4F | C706[BE10]0000            | 	mov	word [YKCtxSwCount], 0
  1426 |          |                           | 	; >>>>> Line:	37
  1427 |          |                           | 	; >>>>> YKIdleCount = 0; 
  1428 | 00000C55 | C706[C010]0000            | 	mov	word [YKIdleCount], 0
  1429 |          |                           | 	; >>>>> Line:	38
  1430 |          |                           | 	; >>>>> YKTickNum = 0; 
  1431 | 00000C5B | C706[C210]0000            | 	mov	word [YKTickNum], 0
  1432 |          |                           | 	; >>>>> Line:	39
  1433 |          |                           | 	; >>>>> YK_Depth = 0; 
  1434 | 00000C61 | C706[C410]0000            | 	mov	word [YK_Depth], 0
  1435 |          |                           | 	; >>>>> Line:	40
  1436 |          |                           | 	; >>>>> FirstTime = 1; 
  1437 | 00000C67 | C706[C610]0100            | 	mov	word [FirstTime], 1
  1438 |          |                           | 	; >>>>> Line:	41
  1439 |          |                           | 	; >>>>> depthMoreOne = 0; 
  1440 | 00000C6D | C706[FA12]0000            | 	mov	word [depthMoreOne], 0
  1441 | 00000C73 | 89EC                      | 	mov	sp, bp
  1442 | 00000C75 | 5D                        | 	pop	bp
  1443 | 00000C76 | C3                        | 	ret
  1444 |          |                           | L_yakc_1:
  1445 | 00000C77 | 55                        | 	push	bp
  1446 | 00000C78 | 89E5                      | 	mov	bp, sp
  1447 | 00000C7A | EBC2                      | 	jmp	L_yakc_2
  1448 |          |                           | 	ALIGN	2
  1449 |          |                           | YKEnterMutex:
  1450 |          |                           | 	; >>>>> Line:	50
  1451 |          |                           | 	; >>>>> void YKEnterMutex(void) { 
  1452 | 00000C7C | EB07                      | 	jmp	L_yakc_4
  1453 |          |                           | L_yakc_5:
  1454 |          |                           | 	; >>>>> Line:	51
  1455 |          |                           | 	; >>>>> disable_interrupts(); 
  1456 | 00000C7E | E835FF                    | 	call	disable_interrupts
  1457 | 00000C81 | 89EC                      | 	mov	sp, bp
  1458 | 00000C83 | 5D                        | 	pop	bp
  1459 | 00000C84 | C3                        | 	ret
  1460 |          |                           | L_yakc_4:
  1461 | 00000C85 | 55                        | 	push	bp
  1462 | 00000C86 | 89E5                      | 	mov	bp, sp
  1463 | 00000C88 | EBF4                      | 	jmp	L_yakc_5
  1464 |          |                           | 	ALIGN	2
  1465 |          |                           | YKExitMutex:
  1466 |          |                           | 	; >>>>> Line:	54
  1467 |          |                           | 	; >>>>> void YKExitMutex(void) { 
  1468 | 00000C8A | EB07                      | 	jmp	L_yakc_7
  1469 |          |                           | L_yakc_8:
  1470 |          |                           | 	; >>>>> Line:	55
  1471 |          |                           | 	; >>>>> enable_interrupts(); 
  1472 | 00000C8C | E825FF                    | 	call	enable_interrupts
  1473 | 00000C8F | 89EC                      | 	mov	sp, bp
  1474 | 00000C91 | 5D                        | 	pop	bp
  1475 | 00000C92 | C3                        | 	ret
  1476 |          |                           | L_yakc_7:
  1477 | 00000C93 | 55                        | 	push	bp
  1478 | 00000C94 | 89E5                      | 	mov	bp, sp
  1479 | 00000C96 | EBF4                      | 	jmp	L_yakc_8
  1480 |          |                           | 	ALIGN	2
  1481 |          |                           | YKIdleTask:
  1482 |          |                           | 	; >>>>> Line:	59
  1483 |          |                           | 	; >>>>> { 
  1484 | 00000C98 | EB14                      | 	jmp	L_yakc_10
  1485 |          |                           | L_yakc_11:
  1486 |          |                           | 	; >>>>> Line:	60
  1487 |          |                           | 	; >>>>> while (1) 
  1488 | 00000C9A | EB0C                      | 	jmp	L_yakc_13
  1489 |          |                           | L_yakc_12:
  1490 |          |                           | 	; >>>>> Line:	62
  1491 |          |                           | 	; >>>>> ++YKIdleCount; 
  1492 | 00000C9C | FF06[C010]                | 	inc	word [YKIdleCount]
  1493 |          |                           | 	; >>>>> Line:	63
  1494 |          |                           | 	; >>>>> --YKIdleCount; 
  1495 | 00000CA0 | FF0E[C010]                | 	dec	word [YKIdleCount]
  1496 |          |                           | 	; >>>>> Line:	64
  1497 |          |                           | 	; >>>>> ++YKIdleCount; 
  1498 | 00000CA4 | FF06[C010]                | 	inc	word [YKIdleCount]
  1499 |          |                           | L_yakc_13:
  1500 | 00000CA8 | EBF2                      | 	jmp	L_yakc_12
  1501 |          |                           | L_yakc_14:
  1502 | 00000CAA | 89EC                      | 	mov	sp, bp
  1503 | 00000CAC | 5D                        | 	pop	bp
  1504 | 00000CAD | C3                        | 	ret
  1505 |          |                           | L_yakc_10:
  1506 | 00000CAE | 55                        | 	push	bp
  1507 | 00000CAF | 89E5                      | 	mov	bp, sp
  1508 | 00000CB1 | EBE7                      | 	jmp	L_yakc_11
  1509 | 00000CB3 | 90                        | 	ALIGN	2
  1510 |          |                           | YKNewTask:
  1511 |          |                           | 	; >>>>> Line:	70
  1512 |          |                           | 	; >>>>> { 
  1513 | 00000CB4 | E9AE01                    | 	jmp	L_yakc_16
  1514 |          |                           | L_yakc_17:
  1515 |          |                           | 	; >>>>> Line:	73
  1516 |          |                           | 	; >>>>> tcb_array[index].delay_counter = 0; 
  1517 | 00000CB7 | A1[380C]                  | 	mov	ax, word [next_available_tcb]
  1518 | 00000CBA | 8946FE                    | 	mov	word [bp-2], ax
  1519 | 00000CBD | A1[F410]                  | 	mov	ax, word [YKList]
  1520 | 00000CC0 | 8946FC                    | 	mov	word [bp-4], ax
  1521 |          |                           | 	; >>>>> Line:	73
  1522 |          |                           | 	; >>>>> tcb_array[index].delay_counter = 0; 
  1523 | 00000CC3 | 8B46FE                    | 	mov	ax, word [bp-2]
  1524 | 00000CC6 | B91600                    | 	mov	cx, 22
  1525 | 00000CC9 | F7E9                      | 	imul	cx
  1526 | 00000CCB | 05[C810]                  | 	add	ax, tcb_array
  1527 | 00000CCE | 89C6                      | 	mov	si, ax
  1528 | 00000CD0 | 83C60C                    | 	add	si, 12
  1529 | 00000CD3 | C7040000                  | 	mov	word [si], 0
  1530 |          |                           | 	; >>>>> Line:	74
  1531 |          |                           | 	; >>>>> tcb_array[index].id = next_available_tcb; 
  1532 | 00000CD7 | 8B46FE                    | 	mov	ax, word [bp-2]
  1533 | 00000CDA | B91600                    | 	mov	cx, 22
  1534 | 00000CDD | F7E9                      | 	imul	cx
  1535 | 00000CDF | 05[C810]                  | 	add	ax, tcb_array
  1536 | 00000CE2 | 89C6                      | 	mov	si, ax
  1537 | 00000CE4 | 83C604                    | 	add	si, 4
  1538 | 00000CE7 | A1[380C]                  | 	mov	ax, word [next_available_tcb]
  1539 | 00000CEA | 8904                      | 	mov	word [si], ax
  1540 |          |                           | 	; >>>>> Line:	75
  1541 |          |                           | 	; >>>>> tcb_array[index].priority = priority; 
  1542 | 00000CEC | 8A4608                    | 	mov	al, byte [bp+8]
  1543 | 00000CEF | 30E4                      | 	xor	ah, ah
  1544 | 00000CF1 | 50                        | 	push	ax
  1545 | 00000CF2 | 8B46FE                    | 	mov	ax, word [bp-2]
  1546 | 00000CF5 | B91600                    | 	mov	cx, 22
  1547 | 00000CF8 | F7E9                      | 	imul	cx
  1548 | 00000CFA | 89C2                      | 	mov	dx, ax
  1549 | 00000CFC | 81C2[C810]                | 	add	dx, tcb_array
  1550 | 00000D00 | 89D6                      | 	mov	si, dx
  1551 | 00000D02 | 83C606                    | 	add	si, 6
  1552 | 00000D05 | 58                        | 	pop	ax
  1553 | 00000D06 | 8904                      | 	mov	word [si], ax
  1554 |          |                           | 	; >>>>> Line:	76
  1555 |          |                           | 	; >>>>> tcb_array[index].task = (void*)task; 
  1556 | 00000D08 | 8B46FE                    | 	mov	ax, word [bp-2]
  1557 | 00000D0B | B91600                    | 	mov	cx, 22
  1558 | 00000D0E | F7E9                      | 	imul	cx
  1559 | 00000D10 | 05[C810]                  | 	add	ax, tcb_array
  1560 | 00000D13 | 89C6                      | 	mov	si, ax
  1561 | 00000D15 | 83C612                    | 	add	si, 18
  1562 | 00000D18 | 8B4604                    | 	mov	ax, word [bp+4]
  1563 | 00000D1B | 8904                      | 	mov	word [si], ax
  1564 |          |                           | 	; >>>>> Line:	77
  1565 |          |                           | 	; >>>>> tcb_array[index].pInst = (void*)(task); 
  1566 | 00000D1D | 8B46FE                    | 	mov	ax, word [bp-2]
  1567 | 00000D20 | B91600                    | 	mov	cx, 22
  1568 | 00000D23 | F7E9                      | 	imul	cx
  1569 | 00000D25 | 05[C810]                  | 	add	ax, tcb_array
  1570 | 00000D28 | 89C6                      | 	mov	si, ax
  1571 | 00000D2A | 83C602                    | 	add	si, 2
  1572 | 00000D2D | 8B4604                    | 	mov	ax, word [bp+4]
  1573 | 00000D30 | 8904                      | 	mov	word [si], ax
  1574 |          |                           | 	; >>>>> Line:	78
  1575 |          |                           | 	; >>>>> tcb_array[index].pStck = (int*)(taskStack); 
  1576 | 00000D32 | 8B46FE                    | 	mov	ax, word [bp-2]
  1577 | 00000D35 | B91600                    | 	mov	cx, 22
  1578 | 00000D38 | F7E9                      | 	imul	cx
  1579 | 00000D3A | 89C6                      | 	mov	si, ax
  1580 | 00000D3C | 81C6[C810]                | 	add	si, tcb_array
  1581 | 00000D40 | 8B4606                    | 	mov	ax, word [bp+6]
  1582 | 00000D43 | 8904                      | 	mov	word [si], ax
  1583 |          |                           | 	; >>>>> Line:	79
  1584 |          |                           | 	; >>>>> tcb_array[index].state = READY; 
  1585 | 00000D45 | 8B46FE                    | 	mov	ax, word [bp-2]
  1586 | 00000D48 | B91600                    | 	mov	cx, 22
  1587 | 00000D4B | F7E9                      | 	imul	cx
  1588 | 00000D4D | 05[C810]                  | 	add	ax, tcb_array
  1589 | 00000D50 | 89C6                      | 	mov	si, ax
  1590 | 00000D52 | 83C608                    | 	add	si, 8
  1591 | 00000D55 | C7040100                  | 	mov	word [si], 1
  1592 |          |                           | 	; >>>>> Line:	80
  1593 |          |                           | 	; >>>>> tcb_array[index].firstTime = 1; 
  1594 | 00000D59 | 8B46FE                    | 	mov	ax, word [bp-2]
  1595 | 00000D5C | B91600                    | 	mov	cx, 22
  1596 | 00000D5F | F7E9                      | 	imul	cx
  1597 | 00000D61 | 05[C810]                  | 	add	ax, tcb_array
  1598 | 00000D64 | 89C6                      | 	mov	si, ax
  1599 | 00000D66 | 83C614                    | 	add	si, 20
  1600 | 00000D69 | C7040100                  | 	mov	word [si], 1
  1601 |          |                           | 	; >>>>> Line:	81
  1602 |          |                           | 	; >>>>> next_available_tcb++; 
  1603 | 00000D6D | FF06[380C]                | 	inc	word [next_available_tcb]
  1604 |          |                           | 	; >>>>> Line:	83
  1605 |          |                           | 	; >>>>> if (index == 0) YKList = &(tcb_array[index]); 
  1606 | 00000D71 | 8B46FE                    | 	mov	ax, word [bp-2]
  1607 | 00000D74 | 85C0                      | 	test	ax, ax
  1608 | 00000D76 | 750B                      | 	jne	L_yakc_18
  1609 |          |                           | 	; >>>>> Line:	83
  1610 |          |                           | 	; >>>>> if (index == 0) YKList = &(tcb_array[index]); 
  1611 | 00000D78 | B91600                    | 	mov	cx, 22
  1612 | 00000D7B | F7E9                      | 	imul	cx
  1613 | 00000D7D | 05[C810]                  | 	add	ax, tcb_array
  1614 | 00000D80 | A3[F410]                  | 	mov	word [YKList], ax
  1615 |          |                           | L_yakc_18:
  1616 |          |                           | 	; >>>>> Line:	85
  1617 |          |                           | 	; >>>>> while (tempHead != 0) { 
  1618 | 00000D83 | E9C000                    | 	jmp	L_yakc_20
  1619 |          |                           | L_yakc_19:
  1620 |          |                           | 	; >>>>> Line:	86
  1621 |          |                           | 	; >>>>> t 
  1622 | 00000D86 | 8B76FC                    | 	mov	si, word [bp-4]
  1623 | 00000D89 | 83C606                    | 	add	si, 6
  1624 | 00000D8C | 8A4608                    | 	mov	al, byte [bp+8]
  1625 | 00000D8F | 30E4                      | 	xor	ah, ah
  1626 | 00000D91 | 3B04                      | 	cmp	ax, word [si]
  1627 | 00000D93 | 7C03E9A300                | 	jge	L_yakc_22
  1628 |          |                           | 	; >>>>> Line:	88
  1629 |          |                           | 	; >>>>> if (YKList == tempHead) { 
  1630 | 00000D98 | 8B46FC                    | 	mov	ax, word [bp-4]
  1631 | 00000D9B | 3B06[F410]                | 	cmp	ax, word [YKList]
  1632 | 00000D9F | 7539                      | 	jne	L_yakc_23
  1633 |          |                           | 	; >>>>> Line:	89
  1634 |          |                           | 	; >>>>> YKList->prev = &(tcb_array[index]); 
  1635 | 00000DA1 | 8B46FE                    | 	mov	ax, word [bp-2]
  1636 | 00000DA4 | B91600                    | 	mov	cx, 22
  1637 | 00000DA7 | F7E9                      | 	imul	cx
  1638 | 00000DA9 | 05[C810]                  | 	add	ax, tcb_array
  1639 | 00000DAC | 8B36[F410]                | 	mov	si, word [YKList]
  1640 | 00000DB0 | 83C60E                    | 	add	si, 14
  1641 | 00000DB3 | 8904                      | 	mov	word [si], ax
  1642 |          |                           | 	; >>>>> Line:	90
  1643 |          |                           | 	; >>>>> tcb_array[index].next = YKList; 
  1644 | 00000DB5 | 8B46FE                    | 	mov	ax, word [bp-2]
  1645 | 00000DB8 | B91600                    | 	mov	cx, 22
  1646 | 00000DBB | F7E9                      | 	imul	cx
  1647 | 00000DBD | 05[C810]                  | 	add	ax, tcb_array
  1648 | 00000DC0 | 89C6                      | 	mov	si, ax
  1649 | 00000DC2 | 83C610                    | 	add	si, 16
  1650 | 00000DC5 | A1[F410]                  | 	mov	ax, word [YKList]
  1651 | 00000DC8 | 8904                      | 	mov	word [si], ax
  1652 |          |                           | 	; >>>>> Line:	91
  1653 |          |                           | 	; >>>>> YKList = &(tcb_array[index]); 
  1654 | 00000DCA | 8B46FE                    | 	mov	ax, word [bp-2]
  1655 | 00000DCD | B91600                    | 	mov	cx, 22
  1656 | 00000DD0 | F7E9                      | 	imul	cx
  1657 | 00000DD2 | 05[C810]                  | 	add	ax, tcb_array
  1658 | 00000DD5 | A3[F410]                  | 	mov	word [YKList], ax
  1659 | 00000DD8 | EB5A                      | 	jmp	L_yakc_24
  1660 |          |                           | L_yakc_23:
  1661 |          |                           | 	; >>>>> Line:	94
  1662 |          |                           | 	; >>>>> tcb_array[index].next = tempHead; 
  1663 | 00000DDA | 8B46FE                    | 	mov	ax, word [bp-2]
  1664 | 00000DDD | B91600                    | 	mov	cx, 22
  1665 | 00000DE0 | F7E9                      | 	imul	cx
  1666 | 00000DE2 | 05[C810]                  | 	add	ax, tcb_array
  1667 | 00000DE5 | 89C6                      | 	mov	si, ax
  1668 | 00000DE7 | 83C610                    | 	add	si, 16
  1669 | 00000DEA | 8B46FC                    | 	mov	ax, word [bp-4]
  1670 | 00000DED | 8904                      | 	mov	word [si], ax
  1671 |          |                           | 	; >>>>> Line:	95
  1672 |          |                           | 	; >>>>> tcb_array[index].prev = tempHead->prev; 
  1673 | 00000DEF | 8B76FC                    | 	mov	si, word [bp-4]
  1674 | 00000DF2 | 83C60E                    | 	add	si, 14
  1675 | 00000DF5 | 8B46FE                    | 	mov	ax, word [bp-2]
  1676 | 00000DF8 | B91600                    | 	mov	cx, 22
  1677 | 00000DFB | F7E9                      | 	imul	cx
  1678 | 00000DFD | 05[C810]                  | 	add	ax, tcb_array
  1679 | 00000E00 | 89C7                      | 	mov	di, ax
  1680 | 00000E02 | 83C70E                    | 	add	di, 14
  1681 | 00000E05 | 8B04                      | 	mov	ax, word [si]
  1682 | 00000E07 | 8905                      | 	mov	word [di], ax
  1683 |          |                           | 	; >>>>> Line:	96
  1684 |          |                           | 	; >>>>> tempHead->prev->next = &(tcb_array[index]); 
  1685 | 00000E09 | 8B46FE                    | 	mov	ax, word [bp-2]
  1686 | 00000E0C | B91600                    | 	mov	cx, 22
  1687 | 00000E0F | F7E9                      | 	imul	cx
  1688 | 00000E11 | 05[C810]                  | 	add	ax, tcb_array
  1689 | 00000E14 | 8B76FC                    | 	mov	si, word [bp-4]
  1690 | 00000E17 | 83C60E                    | 	add	si, 14
  1691 | 00000E1A | 8B34                      | 	mov	si, word [si]
  1692 | 00000E1C | 83C610                    | 	add	si, 16
  1693 | 00000E1F | 8904                      | 	mov	word [si], ax
  1694 |          |                           | 	; >>>>> Line:	97
  1695 |          |                           | 	; >>>>> tempHead->prev = &(tcb_array[index]); 
  1696 | 00000E21 | 8B46FE                    | 	mov	ax, word [bp-2]
  1697 | 00000E24 | B91600                    | 	mov	cx, 22
  1698 | 00000E27 | F7E9                      | 	imul	cx
  1699 | 00000E29 | 05[C810]                  | 	add	ax, tcb_array
  1700 | 00000E2C | 8B76FC                    | 	mov	si, word [bp-4]
  1701 | 00000E2F | 83C60E                    | 	add	si, 14
  1702 | 00000E32 | 8904                      | 	mov	word [si], ax
  1703 |          |                           | L_yakc_24:
  1704 |          |                           | 	; >>>>> Line:	99
  1705 |          |                           | 	; >>>>> tempHead = 0; 
  1706 | 00000E34 | C746FC0000                | 	mov	word [bp-4], 0
  1707 | 00000E39 | EB0B                      | 	jmp	L_yakc_25
  1708 |          |                           | L_yakc_22:
  1709 |          |                           | 	; >>>>> Line:	103
  1710 |          |                           | 	; >>>>> tempHead = tempHead->next; 
  1711 | 00000E3B | 8B76FC                    | 	mov	si, word [bp-4]
  1712 | 00000E3E | 83C610                    | 	add	si, 16
  1713 | 00000E41 | 8B04                      | 	mov	ax, word [si]
  1714 | 00000E43 | 8946FC                    | 	mov	word [bp-4], ax
  1715 |          |                           | L_yakc_25:
  1716 |          |                           | L_yakc_20:
  1717 | 00000E46 | 8B46FC                    | 	mov	ax, word [bp-4]
  1718 | 00000E49 | 85C0                      | 	test	ax, ax
  1719 | 00000E4B | 7403E936FF                | 	jne	L_yakc_19
  1720 |          |                           | L_yakc_21:
  1721 |          |                           | 	; >>>>> Line:	106
  1722 |          |                           | 	; >>>>> if (YK_running) { 
  1723 | 00000E50 | A1[3A0C]                  | 	mov	ax, word [YK_running]
  1724 | 00000E53 | 85C0                      | 	test	ax, ax
  1725 | 00000E55 | 740A                      | 	je	L_yakc_26
  1726 |          |                           | 	; >>>>> Line:	107
  1727 |          |                           | 	; >>>>> YKScheduler(2); 
  1728 | 00000E57 | B80200                    | 	mov	ax, 2
  1729 | 00000E5A | 50                        | 	push	ax
  1730 | 00000E5B | E83400                    | 	call	YKScheduler
  1731 | 00000E5E | 83C402                    | 	add	sp, 2
  1732 |          |                           | L_yakc_26:
  1733 | 00000E61 | 89EC                      | 	mov	sp, bp
  1734 | 00000E63 | 5D                        | 	pop	bp
  1735 | 00000E64 | C3                        | 	ret
  1736 |          |                           | L_yakc_16:
  1737 | 00000E65 | 55                        | 	push	bp
  1738 | 00000E66 | 89E5                      | 	mov	bp, sp
  1739 | 00000E68 | 83EC04                    | 	sub	sp, 4
  1740 | 00000E6B | E949FE                    | 	jmp	L_yakc_17
  1741 |          |                           | 	ALIGN	2
  1742 |          |                           | YKRun:
  1743 |          |                           | 	; >>>>> Line:	114
  1744 |          |                           | 	; >>>>> { 
  1745 | 00000E6E | EB1C                      | 	jmp	L_yakc_28
  1746 |          |                           | L_yakc_29:
  1747 |          |                           | 	; >>>>> Line:	115
  1748 |          |                           | 	; >>>>> if (YKList 
  1749 | 00000E70 | B8[C810]                  | 	mov	ax, tcb_array
  1750 | 00000E73 | 3B06[F410]                | 	cmp	ax, word [YKList]
  1751 | 00000E77 | 740F                      | 	je	L_yakc_30
  1752 |          |                           | 	; >>>>> Line:	116
  1753 |          |                           | 	; >>>>> YK_running = 1; 
  1754 | 00000E79 | C706[3A0C]0100            | 	mov	word [YK_running], 1
  1755 |          |                           | 	; >>>>> Line:	117
  1756 |          |                           | 	; >>>>> YKScheduler(0); 
  1757 | 00000E7F | 31C0                      | 	xor	ax, ax
  1758 | 00000E81 | 50                        | 	push	ax
  1759 | 00000E82 | E80D00                    | 	call	YKScheduler
  1760 | 00000E85 | 83C402                    | 	add	sp, 2
  1761 |          |                           | L_yakc_30:
  1762 | 00000E88 | 89EC                      | 	mov	sp, bp
  1763 | 00000E8A | 5D                        | 	pop	bp
  1764 | 00000E8B | C3                        | 	ret
  1765 |          |                           | L_yakc_28:
  1766 | 00000E8C | 55                        | 	push	bp
  1767 | 00000E8D | 89E5                      | 	mov	bp, sp
  1768 | 00000E8F | EBDF                      | 	jmp	L_yakc_29
  1769 | 00000E91 | 90                        | 	ALIGN	2
  1770 |          |                           | YKScheduler:
  1771 |          |                           | 	; >>>>> Line:	126
  1772 |          |                           | 	; >>>>> { 
  1773 | 00000E92 | EB50                      | 	jmp	L_yakc_32
  1774 |          |                           | L_yakc_33:
  1775 |          |                           | 	; >>>>> Line:	129
  1776 |          |                           | 	; >>>>> YKEnterMutex(); 
  1777 | 00000E94 | A1[F410]                  | 	mov	ax, word [YKList]
  1778 | 00000E97 | 8946FE                    | 	mov	word [bp-2], ax
  1779 |          |                           | 	; >>>>> Line:	129
  1780 |          |                           | 	; >>>>> YKEnterMutex(); 
  1781 | 00000E9A | E8DFFD                    | 	call	YKEnterMutex
  1782 |          |                           | 	; >>>>> Line:	130
  1783 |          |                           | 	; >>>>> while (currentTCB != 0) { 
  1784 | 00000E9D | EB37                      | 	jmp	L_yakc_35
  1785 |          |                           | L_yakc_34:
  1786 |          |                           | 	; >>>>> Line:	131
  1787 |          |                           | 	; >>>>> if (currentTCB->state == RUNNING) { 
  1788 | 00000E9F | 8B76FE                    | 	mov	si, word [bp-2]
  1789 | 00000EA2 | 83C608                    | 	add	si, 8
  1790 | 00000EA5 | 833C02                    | 	cmp	word [si], 2
  1791 | 00000EA8 | 7504                      | 	jne	L_yakc_37
  1792 |          |                           | 	; >>>>> Line:	132
  1793 |          |                           | 	; >>>>> break; 
  1794 | 00000EAA | EB31                      | 	jmp	L_yakc_36
  1795 | 00000EAC | EB1D                      | 	jmp	L_yakc_38
  1796 |          |                           | L_yakc_37:
  1797 |          |                           | 	; >>>>> Line:	134
  1798 |          |                           | 	; >>>>> else if (currentTCB->state == READY) { 
  1799 | 00000EAE | 8B76FE                    | 	mov	si, word [bp-2]
  1800 | 00000EB1 | 83C608                    | 	add	si, 8
  1801 | 00000EB4 | 833C01                    | 	cmp	word [si], 1
  1802 | 00000EB7 | 7512                      | 	jne	L_yakc_39
  1803 |          |                           | 	; >>>>> Line:	135
  1804 |          |                           | 	; >>>>> ++YKCtxSwCount; 
  1805 | 00000EB9 | FF06[BE10]                | 	inc	word [YKCtxSwCount]
  1806 |          |                           | 	; >>>>> Line:	136
  1807 |          |                           | 	; >>>>> YKDispatcher(currentTCB, dispatcher_type); 
  1808 | 00000EBD | FF7604                    | 	push	word [bp+4]
  1809 | 00000EC0 | FF76FE                    | 	push	word [bp-2]
  1810 | 00000EC3 | E83400                    | 	call	YKDispatcher
  1811 | 00000EC6 | 83C404                    | 	add	sp, 4
  1812 |          |                           | 	; >>>>> Line:	137
  1813 |          |                           | 	; >>>>> break; 
  1814 | 00000EC9 | EB12                      | 	jmp	L_yakc_36
  1815 |          |                           | L_yakc_39:
  1816 |          |                           | L_yakc_38:
  1817 |          |                           | 	; >>>>> Line:	139
  1818 |          |                           | 	; >>>>> currentTCB = currentTCB->next; 
  1819 | 00000ECB | 8B76FE                    | 	mov	si, word [bp-2]
  1820 | 00000ECE | 83C610                    | 	add	si, 16
  1821 | 00000ED1 | 8B04                      | 	mov	ax, word [si]
  1822 | 00000ED3 | 8946FE                    | 	mov	word [bp-2], ax
  1823 |          |                           | L_yakc_35:
  1824 | 00000ED6 | 8B46FE                    | 	mov	ax, word [bp-2]
  1825 | 00000ED9 | 85C0                      | 	test	ax, ax
  1826 | 00000EDB | 75C2                      | 	jne	L_yakc_34
  1827 |          |                           | L_yakc_36:
  1828 |          |                           | 	; >>>>> Line:	141
  1829 |          |                           | 	; >>>>> YKExitMutex(); 
  1830 | 00000EDD | E8AAFD                    | 	call	YKExitMutex
  1831 | 00000EE0 | 89EC                      | 	mov	sp, bp
  1832 | 00000EE2 | 5D                        | 	pop	bp
  1833 | 00000EE3 | C3                        | 	ret
  1834 |          |                           | L_yakc_32:
  1835 | 00000EE4 | 55                        | 	push	bp
  1836 | 00000EE5 | 89E5                      | 	mov	bp, sp
  1837 | 00000EE7 | 51                        | 	push	cx
  1838 | 00000EE8 | EBAA                      | 	jmp	L_yakc_33
  1839 |          |                           | L_yakc_41:
  1840 | 00000EEA | 626C6F636B20646973-       | 	DB	"block dispatch",0xA,0
  1841 | 00000EF3 | 70617463680A00            | ...
  1842 |          |                           | 	ALIGN	2
  1843 |          |                           | YKDispatcher:
  1844 |          |                           | 	; >>>>> Line:	159
  1845 |          |                           | 	; >>>>> { 
  1846 | 00000EFA | E9CF00                    | 	jmp	L_yakc_42
  1847 |          |                           | L_yakc_43:
  1848 |          |                           | 	; >>>>> Line:	163
  1849 |          |                           | 	; >>>>> old_task = running_task; 
  1850 | 00000EFD | C746FE0000                | 	mov	word [bp-2], 0
  1851 | 00000F02 | 8B7604                    | 	mov	si, word [bp+4]
  1852 | 00000F05 | 83C614                    | 	add	si, 20
  1853 | 00000F08 | 8B04                      | 	mov	ax, word [si]
  1854 | 00000F0A | 8946FC                    | 	mov	word [bp-4], ax
  1855 |          |                           | 	; >>>>> Line:	163
  1856 |          |                           | 	; >>>>> old_task = running_task; 
  1857 | 00000F0D | A1[F610]                  | 	mov	ax, word [running_task]
  1858 | 00000F10 | A3[F810]                  | 	mov	word [old_task], ax
  1859 |          |                           | 	; >>>>> Line:	165
  1860 |          |                           | 	; >>>>> if(FirstTime) { 
  1861 | 00000F13 | A1[C610]                  | 	mov	ax, word [FirstTime]
  1862 | 00000F16 | 85C0                      | 	test	ax, ax
  1863 | 00000F18 | 7418                      | 	je	L_yakc_44
  1864 |          |                           | 	; >>>>> Line:	166
  1865 |          |                           | 	; >>>>> task->firstTime = 0; 
  1866 | 00000F1A | 8B7604                    | 	mov	si, word [bp+4]
  1867 | 00000F1D | 83C614                    | 	add	si, 20
  1868 | 00000F20 | C7040000                  | 	mov	word [si], 0
  1869 |          |                           | 	; >>>>> Line:	167
  1870 |          |                           | 	; >>>>> FirstTime = 0; 
  1871 | 00000F24 | C706[C610]0000            | 	mov	word [FirstTime], 0
  1872 |          |                           | 	; >>>>> Line:	169
  1873 |          |                           | 	; >>>>> running_task = task; 
  1874 | 00000F2A | 8B4604                    | 	mov	ax, word [bp+4]
  1875 | 00000F2D | A3[F610]                  | 	mov	word [running_task], ax
  1876 | 00000F30 | EB66                      | 	jmp	L_yakc_45
  1877 |          |                           | L_yakc_44:
  1878 |          |                           | 	; >>>>> Line:	172
  1879 |          |                           | 	; >>>>> else if (running_task->state == BLOCKED) { 
  1880 | 00000F32 | 8B36[F610]                | 	mov	si, word [running_task]
  1881 | 00000F36 | 83C608                    | 	add	si, 8
  1882 | 00000F39 | 8B04                      | 	mov	ax, word [si]
  1883 | 00000F3B | 85C0                      | 	test	ax, ax
  1884 | 00000F3D | 7534                      | 	jne	L_yakc_46
  1885 |          |                           | 	; >>>>> Line:	173
  1886 |          |                           | 	; >>>>> running_task = task; 
  1887 | 00000F3F | 8B4604                    | 	mov	ax, word [bp+4]
  1888 | 00000F42 | A3[F610]                  | 	mov	word [running_task], ax
  1889 |          |                           | 	; >>>>> Line:	174
  1890 |          |                           | 	; >>>>> if (!(task->firstTime)) { 
  1891 | 00000F45 | 8B7604                    | 	mov	si, word [bp+4]
  1892 | 00000F48 | 83C614                    | 	add	si, 20
  1893 | 00000F4B | 8B04                      | 	mov	ax, word [si]
  1894 | 00000F4D | 85C0                      | 	test	ax, ax
  1895 | 00000F4F | 750C                      | 	jne	L_yakc_47
  1896 |          |                           | 	; >>>>> Line:	175
  1897 |          |                           | 	; >>>>> task->firstTime = 0; 
  1898 | 00000F51 | 8B7604                    | 	mov	si, word [bp+4]
  1899 | 00000F54 | 83C614                    | 	add	si, 20
  1900 | 00000F57 | C7040000                  | 	mov	word [si], 0
  1901 | 00000F5B | EB14                      | 	jmp	L_yakc_48
  1902 |          |                           | L_yakc_47:
  1903 |          |                           | 	; >>>>> Line:	181
  1904 |          |                           | 	; >>>>> task->firstTime = 0; 
  1905 | 00000F5D | 8B7604                    | 	mov	si, word [bp+4]
  1906 | 00000F60 | 83C614                    | 	add	si, 20
  1907 | 00000F63 | C7040000                  | 	mov	word [si], 0
  1908 |          |                           | 	; >>>>> Line:	182
  1909 |          |                           | 	; >>>>> task->state = RUNNING; 
  1910 | 00000F67 | 8B7604                    | 	mov	si, word [bp+4]
  1911 | 00000F6A | 83C608                    | 	add	si, 8
  1912 | 00000F6D | C7040200                  | 	mov	word [si], 2
  1913 |          |                           | L_yakc_48:
  1914 | 00000F71 | EB25                      | 	jmp	L_yakc_49
  1915 |          |                           | L_yakc_46:
  1916 |          |                           | 	; >>>>> Line:	188
  1917 |          |                           | 	; >>>>> task->firstTime = 0; 
  1918 | 00000F73 | 8B7604                    | 	mov	si, word [bp+4]
  1919 | 00000F76 | 83C614                    | 	add	si, 20
  1920 | 00000F79 | C7040000                  | 	mov	word [si], 0
  1921 |          |                           | 	; >>>>> Line:	190
  1922 |          |                           | 	; >>>>> old_task->state = READY; 
  1923 | 00000F7D | 8B36[F810]                | 	mov	si, word [old_task]
  1924 | 00000F81 | 83C608                    | 	add	si, 8
  1925 | 00000F84 | C7040100                  | 	mov	word [si], 1
  1926 |          |                           | 	; >>>>> Line:	191
  1927 |          |                           | 	; >>>>> task->state = RUNNING; 
  1928 | 00000F88 | 8B7604                    | 	mov	si, word [bp+4]
  1929 | 00000F8B | 83C608                    | 	add	si, 8
  1930 | 00000F8E | C7040200                  | 	mov	word [si], 2
  1931 |          |                           | 	; >>>>> Line:	192
  1932 |          |                           | 	; >>>>> e 
  1933 | 00000F92 | 8B4604                    | 	mov	ax, word [bp+4]
  1934 | 00000F95 | A3[F610]                  | 	mov	word [running_task], ax
  1935 |          |                           | L_yakc_49:
  1936 |          |                           | L_yakc_45:
  1937 |          |                           | 	; >>>>> Line:	198
  1938 |          |                           | 	; >>>>> if (dispatcher_type == 2) { 
  1939 | 00000F98 | 837E0602                  | 	cmp	word [bp+6], 2
  1940 | 00000F9C | 751B                      | 	jne	L_yakc_50
  1941 |          |                           | 	; >>>>> Line:	199
  1942 |          |                           | 	; >>>>> printString("block dispatch\n"); 
  1943 | 00000F9E | B8[EA0E]                  | 	mov	ax, L_yakc_41
  1944 | 00000FA1 | 50                        | 	push	ax
  1945 | 00000FA2 | E883F4                    | 	call	printString
  1946 | 00000FA5 | 83C402                    | 	add	sp, 2
  1947 |          |                           | 	; >>>>> Line:	200
  1948 |          |                           | 	; >>>>> if(enable){ 
  1949 | 00000FA8 | 8B46FC                    | 	mov	ax, word [bp-4]
  1950 | 00000FAB | 85C0                      | 	test	ax, ax
  1951 | 00000FAD | 7405                      | 	je	L_yakc_51
  1952 |          |                           | 	; >>>>> Line:	201
  1953 |          |                           | 	; >>>>> YKSecond(); 
  1954 | 00000FAF | E806FC                    | 	call	YKSecond
  1955 | 00000FB2 | EB03                      | 	jmp	L_yakc_52
  1956 |          |                           | L_yakc_51:
  1957 |          |                           | 	; >>>>> Line:	204
  1958 |          |                           | 	; >>>>> YKDispHandler(); 
  1959 | 00000FB4 | E84EFC                    | 	call	YKDispHandler
  1960 |          |                           | L_yakc_52:
  1961 | 00000FB7 | EB0F                      | 	jmp	L_yakc_53
  1962 |          |                           | L_yakc_50:
  1963 |          |                           | 	; >>>>> Line:	207
  1964 |          |                           | 	; >>>>> else if (dispatcher_type == 0) { 
  1965 | 00000FB9 | 8B4606                    | 	mov	ax, word [bp+6]
  1966 | 00000FBC | 85C0                      | 	test	ax, ax
  1967 | 00000FBE | 7505                      | 	jne	L_yakc_54
  1968 |          |                           | 	; >>>>> Line:	208
  1969 |          |                           | 	; >>>>> YKFirst(); 
  1970 | 00000FC0 | E81AFC                    | 	call	YKFirst
  1971 | 00000FC3 | EB03                      | 	jmp	L_yakc_55
  1972 |          |                           | L_yakc_54:
  1973 |          |                           | 	; >>>>> Line:	211
  1974 |          |                           | 	; >>>>> YKISR(); 
  1975 | 00000FC5 | E827FC                    | 	call	YKISR
  1976 |          |                           | L_yakc_55:
  1977 |          |                           | L_yakc_53:
  1978 | 00000FC8 | 89EC                      | 	mov	sp, bp
  1979 | 00000FCA | 5D                        | 	pop	bp
  1980 | 00000FCB | C3                        | 	ret
  1981 |          |                           | L_yakc_42:
  1982 | 00000FCC | 55                        | 	push	bp
  1983 | 00000FCD | 89E5                      | 	mov	bp, sp
  1984 | 00000FCF | 83EC04                    | 	sub	sp, 4
  1985 | 00000FD2 | E928FF                    | 	jmp	L_yakc_43
  1986 | 00000FD5 | 90                        | 	ALIGN	2
  1987 |          |                           | YKDelayTask:
  1988 |          |                           | 	; >>>>> Line:	219
  1989 |          |                           | 	; >>>>> { 
  1990 | 00000FD6 | EB2E                      | 	jmp	L_yakc_57
  1991 |          |                           | L_yakc_58:
  1992 |          |                           | 	; >>>>> Line:	221
  1993 |          |                           | 	; >>>>> if (count == 0) return; 
  1994 | 00000FD8 | 8B4604                    | 	mov	ax, word [bp+4]
  1995 | 00000FDB | 85C0                      | 	test	ax, ax
  1996 | 00000FDD | 7502                      | 	jne	L_yakc_59
  1997 |          |                           | 	; >>>>> Line:	221
  1998 |          |                           | 	; >>>>> if (count == 0) return; 
  1999 | 00000FDF | EB21                      | 	jmp	L_yakc_60
  2000 |          |                           | L_yakc_59:
  2001 |          |                           | 	; >>>>> Line:	222
  2002 |          |                           | 	; >>>>> running_task->delay_counter = count; 
  2003 | 00000FE1 | 8B36[F610]                | 	mov	si, word [running_task]
  2004 | 00000FE5 | 83C60C                    | 	add	si, 12
  2005 | 00000FE8 | 8B4604                    | 	mov	ax, word [bp+4]
  2006 | 00000FEB | 8904                      | 	mov	word [si], ax
  2007 |          |                           | 	; >>>>> Line:	223
  2008 |          |                           | 	; >>>>> running_task->state = BLOCKED; 
  2009 | 00000FED | 8B36[F610]                | 	mov	si, word [running_task]
  2010 | 00000FF1 | 83C608                    | 	add	si, 8
  2011 | 00000FF4 | C7040000                  | 	mov	word [si], 0
  2012 |          |                           | 	; >>>>> Line:	226
  2013 |          |                           | 	; >>>>> YKScheduler(2); 
  2014 | 00000FF8 | B80200                    | 	mov	ax, 2
  2015 | 00000FFB | 50                        | 	push	ax
  2016 | 00000FFC | E893FE                    | 	call	YKScheduler
  2017 | 00000FFF | 83C402                    | 	add	sp, 2
  2018 |          |                           | L_yakc_60:
  2019 | 00001002 | 89EC                      | 	mov	sp, bp
  2020 | 00001004 | 5D                        | 	pop	bp
  2021 | 00001005 | C3                        | 	ret
  2022 |          |                           | L_yakc_57:
  2023 | 00001006 | 55                        | 	push	bp
  2024 | 00001007 | 89E5                      | 	mov	bp, sp
  2025 | 00001009 | EBCD                      | 	jmp	L_yakc_58
  2026 | 0000100B | 90                        | 	ALIGN	2
  2027 |          |                           | YKEnterISR:
  2028 |          |                           | 	; >>>>> Line:	233
  2029 |          |                           | 	; >>>>> { 
  2030 | 0000100C | EB08                      | 	jmp	L_yakc_62
  2031 |          |                           | L_yakc_63:
  2032 |          |                           | 	; >>>>> Line:	234
  2033 |          |                           | 	; >>>>> ++YK_Depth; 
  2034 | 0000100E | FF06[C410]                | 	inc	word [YK_Depth]
  2035 | 00001012 | 89EC                      | 	mov	sp, bp
  2036 | 00001014 | 5D                        | 	pop	bp
  2037 | 00001015 | C3                        | 	ret
  2038 |          |                           | L_yakc_62:
  2039 | 00001016 | 55                        | 	push	bp
  2040 | 00001017 | 89E5                      | 	mov	bp, sp
  2041 | 00001019 | EBF3                      | 	jmp	L_yakc_63
  2042 | 0000101B | 90                        | 	ALIGN	2
  2043 |          |                           | YKExitISR:
  2044 |          |                           | 	; >>>>> Line:	239
  2045 |          |                           | 	; >>>>> { 
  2046 | 0000101C | EB1F                      | 	jmp	L_yakc_65
  2047 |          |                           | L_yakc_66:
  2048 |          |                           | 	; >>>>> Line:	240
  2049 |          |                           | 	; >>>>> --YK_Depth; 
  2050 | 0000101E | FF0E[C410]                | 	dec	word [YK_Depth]
  2051 |          |                           | 	; >>>>> Line:	241
  2052 |          |                           | 	; >>>>> if (YK_Depth == 0){ 
  2053 | 00001022 | A1[C410]                  | 	mov	ax, word [YK_Depth]
  2054 | 00001025 | 85C0                      | 	test	ax, ax
  2055 | 00001027 | 7510                      | 	jne	L_yakc_67
  2056 |          |                           | 	; >>>>> Line:	242
  2057 |          |                           | 	; >>>>> depthMoreOne = 0; 
  2058 | 00001029 | C706[FA12]0000            | 	mov	word [depthMoreOne], 0
  2059 |          |                           | 	; >>>>> Line:	243
  2060 |          |                           | 	; >>>>> YKSche 
  2061 | 0000102F | B80100                    | 	mov	ax, 1
  2062 | 00001032 | 50                        | 	push	ax
  2063 | 00001033 | E85CFE                    | 	call	YKScheduler
  2064 | 00001036 | 83C402                    | 	add	sp, 2
  2065 |          |                           | L_yakc_67:
  2066 | 00001039 | 89EC                      | 	mov	sp, bp
  2067 | 0000103B | 5D                        | 	pop	bp
  2068 | 0000103C | C3                        | 	ret
  2069 |          |                           | L_yakc_65:
  2070 | 0000103D | 55                        | 	push	bp
  2071 | 0000103E | 89E5                      | 	mov	bp, sp
  2072 | 00001040 | EBDC                      | 	jmp	L_yakc_66
  2073 |          |                           | L_yakc_69:
  2074 | 00001042 | 53657420746F207265-       | 	DB	"Set to ready",0xA,0
  2075 | 0000104B | 6164790A00                | ...
  2076 |          |                           | 	ALIGN	2
  2077 |          |                           | YKTickHandler:
  2078 |          |                           | 	; >>>>> Line:	250
  2079 |          |                           | 	; >>>>> { 
  2080 | 00001050 | EB65                      | 	jmp	L_yakc_70
  2081 |          |                           | L_yakc_71:
  2082 |          |                           | 	; >>>>> Line:	252
  2083 |          |                           | 	; >>>>> ++YKTickNum; 
  2084 | 00001052 | A1[F410]                  | 	mov	ax, word [YKList]
  2085 | 00001055 | 8946FE                    | 	mov	word [bp-2], ax
  2086 |          |                           | 	; >>>>> Line:	252
  2087 |          |                           | 	; >>>>> ++YKTickNum; 
  2088 | 00001058 | FF06[C210]                | 	inc	word [YKTickNum]
  2089 |          |                           | 	; >>>>> Line:	253
  2090 |          |                           | 	; >>>>> while (currentTCB != 0) { 
  2091 | 0000105C | EB4E                      | 	jmp	L_yakc_73
  2092 |          |                           | L_yakc_72:
  2093 |          |                           | 	; >>>>> Line:	254
  2094 |          |                           | 	; >>>>> if (currentTCB->task == YKIdleTask) return; 
  2095 | 0000105E | 8B76FE                    | 	mov	si, word [bp-2]
  2096 | 00001061 | 83C612                    | 	add	si, 18
  2097 | 00001064 | B8[980C]                  | 	mov	ax, YKIdleTask
  2098 | 00001067 | 3B04                      | 	cmp	ax, word [si]
  2099 | 00001069 | 7502                      | 	jne	L_yakc_75
  2100 |          |                           | 	; >>>>> Line:	254
  2101 |          |                           | 	; >>>>> if (currentTCB->task == YKIdleTask) return; 
  2102 | 0000106B | EB46                      | 	jmp	L_yakc_76
  2103 |          |                           | L_yakc_75:
  2104 |          |                           | 	; >>>>> Line:	256
  2105 |          |                           | 	; >>>>> if (currentTCB->delay_counter != 0) { 
  2106 | 0000106D | 8B76FE                    | 	mov	si, word [bp-2]
  2107 | 00001070 | 83C60C                    | 	add	si, 12
  2108 | 00001073 | 8B04                      | 	mov	ax, word [si]
  2109 | 00001075 | 85C0                      | 	test	ax, ax
  2110 | 00001077 | 7428                      | 	je	L_yakc_77
  2111 |          |                           | 	; >>>>> Line:	257
  2112 |          |                           | 	; >>>>> --(currentTCB->delay_counter); 
  2113 | 00001079 | 8B76FE                    | 	mov	si, word [bp-2]
  2114 | 0000107C | 83C60C                    | 	add	si, 12
  2115 | 0000107F | FF0C                      | 	dec	word [si]
  2116 |          |                           | 	; >>>>> Line:	258
  2117 |          |                           | 	; >>>>> if (currentTCB->delay_counter == 0) { 
  2118 | 00001081 | 8B76FE                    | 	mov	si, word [bp-2]
  2119 | 00001084 | 83C60C                    | 	add	si, 12
  2120 | 00001087 | 8B04                      | 	mov	ax, word [si]
  2121 | 00001089 | 85C0                      | 	test	ax, ax
  2122 | 0000108B | 7514                      | 	jne	L_yakc_78
  2123 |          |                           | 	; >>>>> Line:	259
  2124 |          |                           | 	; >>>>> currentTCB->state = READY; 
  2125 | 0000108D | 8B76FE                    | 	mov	si, word [bp-2]
  2126 | 00001090 | 83C608                    | 	add	si, 8
  2127 | 00001093 | C7040100                  | 	mov	word [si], 1
  2128 |          |                           | 	; >>>>> Line:	260
  2129 |          |                           | 	; >>>>> printString("Set to ready\n"); 
  2130 | 00001097 | B8[4210]                  | 	mov	ax, L_yakc_69
  2131 | 0000109A | 50                        | 	push	ax
  2132 | 0000109B | E88AF3                    | 	call	printString
  2133 | 0000109E | 83C402                    | 	add	sp, 2
  2134 |          |                           | L_yakc_78:
  2135 |          |                           | L_yakc_77:
  2136 |          |                           | 	; >>>>> Line:	263
  2137 |          |                           | 	; >>>>> currentTCB = currentTCB->next; 
  2138 | 000010A1 | 8B76FE                    | 	mov	si, word [bp-2]
  2139 | 000010A4 | 83C610                    | 	add	si, 16
  2140 | 000010A7 | 8B04                      | 	mov	ax, word [si]
  2141 | 000010A9 | 8946FE                    | 	mov	word [bp-2], ax
  2142 |          |                           | L_yakc_73:
  2143 | 000010AC | 8B46FE                    | 	mov	ax, word [bp-2]
  2144 | 000010AF | 85C0                      | 	test	ax, ax
  2145 | 000010B1 | 75AB                      | 	jne	L_yakc_72
  2146 |          |                           | L_yakc_74:
  2147 |          |                           | L_yakc_76:
  2148 | 000010B3 | 89EC                      | 	mov	sp, bp
  2149 | 000010B5 | 5D                        | 	pop	bp
  2150 | 000010B6 | C3                        | 	ret
  2151 |          |                           | L_yakc_70:
  2152 | 000010B7 | 55                        | 	push	bp
  2153 | 000010B8 | 89E5                      | 	mov	bp, sp
  2154 | 000010BA | 51                        | 	push	cx
  2155 | 000010BB | EB95                      | 	jmp	L_yakc_71
  2156 | 000010BD | 90                        | 	ALIGN	2
  2157 |          |                           | YKCtxSwCount:
  2158 | 000010BE | 00<rept>                  | 	TIMES	2 db 0
  2159 |          |                           | YKIdleCount:
  2160 | 000010C0 | 00<rept>                  | 	TIMES	2 db 0
  2161 |          |                           | YKTickNum:
  2162 | 000010C2 | 00<rept>                  | 	TIMES	2 db 0
  2163 |          |                           | YK_Depth:
  2164 | 000010C4 | 00<rept>                  | 	TIMES	2 db 0
  2165 |          |                           | FirstTime:
  2166 | 000010C6 | 00<rept>                  | 	TIMES	2 db 0
  2167 |          |                           | tcb_array:
  2168 | 000010C8 | 00<rept>                  | 	TIMES	44 db 0
  2169 |          |                           | YKList:
  2170 | 000010F4 | 00<rept>                  | 	TIMES	2 db 0
  2171 |          |                           | running_task:
  2172 | 000010F6 | 00<rept>                  | 	TIMES	2 db 0
  2173 |          |                           | old_task:
  2174 | 000010F8 | 00<rept>                  | 	TIMES	2 db 0
  2175 |          |                           | IdleTskStk:
  2176 | 000010FA | 00<rept>                  | 	TIMES	512 db 0
  2177 |          |                           | depthMoreOne:
  2178 | 000012FA | 00<rept>                  | 	TIMES	2 db 0
  2179 |          |                           | ISR_Reset:
  2180 | 000012FC | 50                        | 	push ax
  2181 | 000012FD | 53                        | 	push bx
  2182 | 000012FE | 51                        | 	push cx
  2183 | 000012FF | 52                        | 	push dx
  2184 | 00001300 | 56                        | 	push si
  2185 | 00001301 | 57                        | 	push di
  2186 | 00001302 | 55                        | 	push bp
  2187 | 00001303 | 06                        | 	push es
  2188 | 00001304 | 1E                        | 	push ds
  2189 |          |                           | 
  2190 | 00001305 | E804FD                    | 	call YKEnterISR
  2191 | 00001308 | FB                        | 	sti
  2192 |          |                           | 	
  2193 | 00001309 | E85C00                    | 	call vReset
  2194 |          |                           | 
  2195 | 0000130C | FA                        | 	cli
  2196 | 0000130D | E8BAF0                    | 	call signalEOI
  2197 | 00001310 | E809FD                    | 	call YKExitISR
  2198 | 00001313 | 1F                        | 	pop ds
  2199 | 00001314 | 07                        | 	pop es
  2200 | 00001315 | 5D                        | 	pop bp
  2201 | 00001316 | 5F                        | 	pop di
  2202 | 00001317 | 5E                        | 	pop si
  2203 | 00001318 | 5A                        | 	pop dx
  2204 | 00001319 | 59                        | 	pop cx
  2205 | 0000131A | 5B                        | 	pop bx
  2206 | 0000131B | 58                        | 	pop ax
  2207 | 0000131C | CF                        | 	iret
  2208 |          |                           | ISR_Tick:
  2209 |          |                           | 	
  2210 | 0000131D | 50                        | 	push ax
  2211 | 0000131E | 53                        | 	push bx
  2212 | 0000131F | 51                        | 	push cx
  2213 | 00001320 | 52                        | 	push dx
  2214 | 00001321 | 56                        | 	push si
  2215 | 00001322 | 57                        | 	push di
  2216 | 00001323 | 55                        | 	push bp
  2217 | 00001324 | 06                        | 	push es
  2218 | 00001325 | 1E                        | 	push ds
  2219 | 00001326 | E8E3FC                    | 	call YKEnterISR
  2220 | 00001329 | FB                        | 	sti
  2221 |          |                           | 	
  2222 | 0000132A | E85900                    | 	call vTick
  2223 | 0000132D | E820FD                    | 	call YKTickHandler
  2224 |          |                           | 
  2225 | 00001330 | FA                        | 	cli
  2226 | 00001331 | E896F0                    | 	call signalEOI
  2227 | 00001334 | E8E5FC                    | 	call YKExitISR
  2228 |          |                           | 	
  2229 | 00001337 | 1F                        | 	pop ds
  2230 | 00001338 | 07                        | 	pop es
  2231 | 00001339 | 5D                        | 	pop bp
  2232 | 0000133A | 5F                        | 	pop di
  2233 | 0000133B | 5E                        | 	pop si
  2234 | 0000133C | 5A                        | 	pop dx
  2235 | 0000133D | 59                        | 	pop cx
  2236 | 0000133E | 5B                        | 	pop bx
  2237 | 0000133F | 58                        | 	pop ax
  2238 | 00001340 | CF                        | 	iret
  2239 |          |                           | 
  2240 |          |                           | ISR_Keyboard:
  2241 |          |                           | 
  2242 |          |                           | 
  2243 | 00001341 | 50                        | 	push ax
  2244 | 00001342 | 53                        | 	push bx
  2245 | 00001343 | 51                        | 	push cx
  2246 | 00001344 | 52                        | 	push dx
  2247 | 00001345 | 56                        | 	push si
  2248 | 00001346 | 57                        | 	push di
  2249 | 00001347 | 55                        | 	push bp
  2250 | 00001348 | 06                        | 	push es
  2251 | 00001349 | 1E                        | 	push ds
  2252 | 0000134A | E8BFFC                    | 	call YKEnterISR
  2253 | 0000134D | FB                        | 	sti
  2254 |          |                           | 	
  2255 | 0000134E | E89F00                    | 	call vKeyboard
  2256 |          |                           | 
  2257 | 00001351 | FA                        | 	cli
  2258 | 00001352 | E875F0                    | 	call signalEOI
  2259 | 00001355 | E8C4FC                    | 	call YKExitISR
  2260 | 00001358 | 1F                        | 	pop ds
  2261 | 00001359 | 07                        | 	pop es
  2262 | 0000135A | 5D                        | 	pop bp
  2263 | 0000135B | 5F                        | 	pop di
  2264 | 0000135C | 5E                        | 	pop si
  2265 | 0000135D | 5A                        | 	pop dx
  2266 | 0000135E | 59                        | 	pop cx
  2267 | 0000135F | 5B                        | 	pop bx
  2268 | 00001360 | 58                        | 	pop ax
  2269 | 00001361 | CF                        | 	iret; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  2270 |          |                           | 	CPU	8086
  2271 |          |                           | 	ALIGN	2
  2272 | 00001362 | E949F5                    | 	jmp	main	; Jump to program start
  2273 | 00001365 | 90                        | 	ALIGN	2
  2274 |          |                           | L_myinth_1:
  2275 | 00001366 | 0000                      | 	DW	0
  2276 |          |                           | 	ALIGN	2
  2277 |          |                           | vReset:
  2278 |          |                           | 	; >>>>> Line:	6
  2279 |          |                           | 	; >>>>> { 
  2280 | 00001368 | EB0D                      | 	jmp	L_myinth_2
  2281 |          |                           | L_myinth_3:
  2282 |          |                           | 	; >>>>> Line:	7
  2283 |          |                           | 	; >>>>> exit(0); 
  2284 | 0000136A | 30C0                      | 	xor	al, al
  2285 | 0000136C | 50                        | 	push	ax
  2286 | 0000136D | E86AF0                    | 	call	exit
  2287 | 00001370 | 83C402                    | 	add	sp, 2
  2288 | 00001373 | 89EC                      | 	mov	sp, bp
  2289 | 00001375 | 5D                        | 	pop	bp
  2290 | 00001376 | C3                        | 	ret
  2291 |          |                           | L_myinth_2:
  2292 | 00001377 | 55                        | 	push	bp
  2293 | 00001378 | 89E5                      | 	mov	bp, sp
  2294 | 0000137A | EBEE                      | 	jmp	L_myinth_3
  2295 |          |                           | L_myinth_6:
  2296 | 0000137C | 0A00                      | 	DB	0xA,0
  2297 |          |                           | L_myinth_5:
  2298 | 0000137E | 0A5449434B2000            | 	DB	0xA,"TICK ",0
  2299 | 00001385 | 90                        | 	ALIGN	2
  2300 |          |                           | vTick:
  2301 |          |                           | 	; >>>>> Line:	11
  2302 |          |                           | 	; >>>>> { 
  2303 | 00001386 | EB26                      | 	jmp	L_myinth_7
  2304 |          |                           | L_myinth_8:
  2305 |          |                           | 	; >>>>> Line:	13
  2306 |          |                           | 	; >>>>> printString("\nTICK "); 
  2307 | 00001388 | B8[7E13]                  | 	mov	ax, L_myinth_5
  2308 | 0000138B | 50                        | 	push	ax
  2309 | 0000138C | E899F0                    | 	call	printString
  2310 | 0000138F | 83C402                    | 	add	sp, 2
  2311 |          |                           | 	; >>>>> Line:	14
  2312 |          |                           | 	; >>>>> printUInt(++tick); 
  2313 | 00001392 | A1[6613]                  | 	mov	ax, word [L_myinth_1]
  2314 | 00001395 | 40                        | 	inc	ax
  2315 | 00001396 | A3[6613]                  | 	mov	word [L_myinth_1], ax
  2316 | 00001399 | 50                        | 	push	ax
  2317 | 0000139A | E82FF2                    | 	call	printUInt
  2318 | 0000139D | 83C402                    | 	add	sp, 2
  2319 |          |                           | 	; >>>>> Line:	15
  2320 |          |                           | 	; >>>>> printString("\n"); 
  2321 | 000013A0 | B8[7C13]                  | 	mov	ax, L_myinth_6
  2322 | 000013A3 | 50                        | 	push	ax
  2323 | 000013A4 | E881F0                    | 	call	printString
  2324 | 000013A7 | 83C402                    | 	add	sp, 2
  2325 | 000013AA | 89EC                      | 	mov	sp, bp
  2326 | 000013AC | 5D                        | 	pop	bp
  2327 | 000013AD | C3                        | 	ret
  2328 |          |                           | L_myinth_7:
  2329 | 000013AE | 55                        | 	push	bp
  2330 | 000013AF | 89E5                      | 	mov	bp, sp
  2331 | 000013B1 | EBD5                      | 	jmp	L_myinth_8
  2332 |          |                           | L_myinth_13:
  2333 | 000013B3 | 292049474E4F524544-       | 	DB	") IGNORED",0xA,0
  2334 | 000013BC | 0A00                      | ...
  2335 |          |                           | L_myinth_12:
  2336 | 000013BE | 0A4B45595052455353-       | 	DB	0xA,"KEYPRESS (",0
  2337 | 000013C7 | 202800                    | ...
  2338 |          |                           | L_myinth_11:
  2339 | 000013CA | 0A44454C415920434F-       | 	DB	0xA,"DELAY COMPLETE",0xA,0
  2340 | 000013D3 | 4D504C4554450A00          | ...
  2341 |          |                           | L_myinth_10:
  2342 | 000013DB | 0A44454C4159204B45-       | 	DB	0xA,"DELAY KEY PRESSED",0xA,0
  2343 | 000013E4 | 592050524553534544-       | ...
  2344 | 000013ED | 0A00                      | ...
  2345 | 000013EF | 90                        | 	ALIGN	2
  2346 |          |                           | vKeyboard:
  2347 |          |                           | 	; >>>>> Line:	19
  2348 |          |                           | 	; >>>>> { 
  2349 | 000013F0 | EB50                      | 	jmp	L_myinth_14
  2350 |          |                           | L_myinth_15:
  2351 |          |                           | 	; >>>>> Line:	21
  2352 |          |                           | 	; >>>>> if((char)KeyBuffer == 'd'){ 
  2353 | 000013F2 | 803E[C000]64              | 	cmp	byte [KeyBuffer], 100
  2354 | 000013F7 | 7527                      | 	jne	L_myinth_16
  2355 |          |                           | 	; >>>>> Line:	22
  2356 |          |                           | 	; >>>>> printString("\nDELAY KEY PRESSED\n"); 
  2357 | 000013F9 | B8[DB13]                  | 	mov	ax, L_myinth_10
  2358 | 000013FC | 50                        | 	push	ax
  2359 | 000013FD | E828F0                    | 	call	printString
  2360 | 00001400 | 83C402                    | 	add	sp, 2
  2361 |          |                           | 	; >>>>> Line:	23
  2362 |          |                           | 	; >>>>> loop_tick = 0; 
  2363 | 00001403 | C746FE0000                | 	mov	word [bp-2], 0
  2364 |          |                           | 	; >>>>> Line:	24
  2365 |          |                           | 	; >>>>> while(loop_tick < 5000){ 
  2366 | 00001408 | EB03                      | 	jmp	L_myinth_18
  2367 |          |                           | L_myinth_17:
  2368 |          |                           | 	; >>>>> Line:	25
  2369 |          |                           | 	; >>>>> ++loop_tick; 
  2370 | 0000140A | FF46FE                    | 	inc	word [bp-2]
  2371 |          |                           | L_myinth_18:
  2372 | 0000140D | 817EFE8813                | 	cmp	word [bp-2], 5000
  2373 | 00001412 | 7CF6                      | 	jl	L_myinth_17
  2374 |          |                           | L_myinth_19:
  2375 |          |                           | 	; >>>>> Line:	28
  2376 |          |                           | 	; >>>>> printString("\nDELAY COMPLETE\n"); 
  2377 | 00001414 | B8[CA13]                  | 	mov	ax, L_myinth_11
  2378 | 00001417 | 50                        | 	push	ax
  2379 | 00001418 | E80DF0                    | 	call	printString
  2380 | 0000141B | 83C402                    | 	add	sp, 2
  2381 | 0000141E | EB1E                      | 	jmp	L_myinth_20
  2382 |          |                           | L_myinth_16:
  2383 |          |                           | 	; >>>>> Line:	31
  2384 |          |                           | 	; >>>>> printString("\nKEYPRESS ("); 
  2385 | 00001420 | B8[BE13]                  | 	mov	ax, L_myinth_12
  2386 | 00001423 | 50                        | 	push	ax
  2387 | 00001424 | E801F0                    | 	call	printString
  2388 | 00001427 | 83C402                    | 	add	sp, 2
  2389 |          |                           | 	; >>>>> Line:	32
  2390 |          |                           | 	; >>>>> printChar((char)KeyBuffer); 
  2391 | 0000142A | FF36[C000]                | 	push	word [KeyBuffer]
  2392 | 0000142E | E8D3EF                    | 	call	printChar
  2393 | 00001431 | 83C402                    | 	add	sp, 2
  2394 |          |                           | 	; >>>>> Line:	33
  2395 |          |                           | 	; >>>>> printString(") IGNORED\n") 
  2396 | 00001434 | B8[B313]                  | 	mov	ax, L_myinth_13
  2397 | 00001437 | 50                        | 	push	ax
  2398 | 00001438 | E8EDEF                    | 	call	printString
  2399 | 0000143B | 83C402                    | 	add	sp, 2
  2400 |          |                           | L_myinth_20:
  2401 | 0000143E | 89EC                      | 	mov	sp, bp
  2402 | 00001440 | 5D                        | 	pop	bp
  2403 | 00001441 | C3                        | 	ret
  2404 |          |                           | L_myinth_14:
  2405 | 00001442 | 55                        | 	push	bp
  2406 | 00001443 | 89E5                      | 	mov	bp, sp
  2407 | 00001445 | 51                        | 	push	cx
  2408 | 00001446 | EBAA                      | 	jmp	L_myinth_15
